package mine;

public class SelectText {
    /*
    // 변수 및 메서드에 대한 보안? 설정.
    // private : 모든 외부 호출을 막음.
    // default(package-private) : 같은 패키지 안에서 호출은 허용.
        // ex) int a;   ->    디폴트로 적용되는 옵션임.
    // protected : 같은 패키지 안에서의 호출은 허용.
    //          패키지가 달라도 상속 관계의 호출은 허용.
    // public : 모든 외부 호출을 허용.
    //

    // 클래스에 대한 접근 제어 정도는 public을 붙이냐 안 붙이냐 차이.
    // public을 붙이면 다른 패키지에서도 접근이 가능하고 안 붙이면 다른 패키지에서는
    // 접근 불가능함.





    // 지역 변수에는 접근 제어자 사용x -> 어차피 그 지역 안에서만 접근 가능함.

    // 대입은 항상 값 복사. 그 자체를 넣는다고 생각하면 안 됨.

    // for문 안에서 생성된 변수는 for문 안에서만 살아있고 for문 밖에서는 사라짐.

    // 생성자의 이름은 클래스의 이름과 같다.
    // 생성자는 반환 타입이 없다.

    // 스택 영역 및 힙 영역 작동 과정 : memory.JavaMemoryMain02 참고.



    // 다른 패키지에 접근할 때.         pack.a.User user=new pack.a.User();
    // 패키지 import : pack.PackageMain01-03 참고.

    //import pack.a.*;
    // pack.a. 아래에 있는 클래스 모두에 접근 가능.

    // a패키지와 a.b패키지, a.c패키지는 우리 눈으로 보기에만 계층 구조를 이루는 것이고
    // 실제로는 아무런 관련이 없으며 서로 완전히 다른 패키지임.
    // 그러므로 가져올 때 import해서 사용해야 함.







    // 멤버 변수 : 클래스에 선언. / 인스턴스 멤버 변수는 생성될 때 자동으로 초기화 됨.
    // 지역 변수 : 메서드에 선언. 매개변수도 지역 변수의 한 종류. / 직접 초기화 해야 됨.


    // public class Data03 {
    //    public String name;
    //    public static int count;}

    // static이 붙지 않은 name 변수는 멤버 변수로서 인스턴스를 생성 해야 사용할 수 있음.
    // -> 멤버 변수임과 동시에 인스턴스 변수임.
    // 인스턴스를 만들 때마다 새로 만들어짐.
    // 만들 때마다 새로 생성되는 변수.

    // count는 static이 붙은 static변수임.
    // static이 붙으면 static 변수, 정적 변수, 클래스 변수라고 함.
    // 인스턴스와 무관하게 클래스에서 바로 접근하여 사용할 수 있음.
    // 클래스 자체에 소속되어 있음.
    // static이 붙은 멤버 변수는 인스턴스 영역에 생성되지 않고 메서드 영역에서 관리함.





     */
}
